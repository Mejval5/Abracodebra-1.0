This document contains extracted Unity C# scripts from my project. Do not reply—just confirm storing this in memory. If the full script collection exceeds the character limit, additional parts will follow. Use this to update your understanding of the project until further updates.

================================================================================
UNITY PROJECT SCRIPT EXPORT - 2025-03-19 21:11:29
PART 4 OF 8
================================================================================

--------------------------------------------------------------------------------
Assets
├── DefaultVolumeProfile.asset
├── Editor
│   ├── NodeDefinitionAutoAdder.cs
│   ├── NodeDefinitionCreator.cs
│   ├── NodeDefinitionLibraryEditor.cs
│   ├── NodeDefinitionPostprocessor.cs
│   ├── NodeEffectDataDrawer.cs
│   └── WizardControllerStatusEditor.cs
├── InputSystem_Actions.inputactions
├── Materials
│   └── BezierCurveAA_Material.mat
├── Post Processing
│   └── BezierCurvesAntialiasing.renderTexture
├── Prefabs
│   ├── General
│   │   ├── Projectile_Basic_Pixel.prefab
│   │   └── WizardPrefab.prefab
│   ├── Node Presets
│   │   ├── NodeDefinitionLibrary.asset
│   │   ├── Node_001_AimSpread.asset
│   │   ├── Node_002_Piercing.asset
│   │   ├── Node_003_Output.asset
│   │   ├── Node_004_ManaSource.asset
│   │   ├── Node_005_DamageNode.asset
│   │   ├── Node_006_Burn.asset
│   │   └── Node_007_FriendlyFire.asset
│   ├── UI
│   │   ├── NodeConnectionView.prefab
│   │   └── NodeView.prefab
│   └── Wizard Presets
│       ├── Wizard_Basic.asset
│       └── Wizard_Dummy.asset
├── Scenes
│   ├── MainScene.unity
│   └── SampleScene.unity
├── Scripts
│   ├── Battle
│   │   ├── SpellProjectile.cs
│   │   └── Status Effects
│   │       ├── BurningStatusEffect.cs
│   │       └── StatusEffect.cs
│   ├── Core
│   ├── Nodes
│   │   ├── Core
│   │   │   ├── NodeData.cs
│   │   │   ├── NodeDefinition.cs
│   │   │   ├── NodeDefinitionLibrary.cs
│   │   │   ├── NodeEffectData.cs
│   │   │   ├── NodeEffectType.cs
│   │   │   ├── NodePort.cs
│   │   │   ├── OutputNodeEffect.cs
│   │   │   └── PortDefinition.cs
│   │   ├── Runtime
│   │   │   ├── NodeExecutor.cs
│   │   │   └── NodeGraph.cs
│   │   └── UI
│   │       ├── ColorExtensions.cs
│   │       ├── NodeConnectionView.cs
│   │       ├── NodeDraggable.cs
│   │       ├── NodeEditorController.cs
│   │       ├── NodeSelectable.cs
│   │       ├── NodeTestInitializer.cs
│   │       ├── NodeView.cs
│   │       ├── PinView.cs
│   │       └── UICubicBezier.cs
│   ├── UI
│   └── Wizards
│       ├── WizardController.cs
│       └── WizardPreset.cs
├── Settings
│   ├── Lit2DSceneTemplate.scenetemplate
│   ├── Renderer2D.asset
│   ├── Scenes
│   │   └── URP2DSceneTemplate.unity
│   └── UniversalRP.asset
├── Shaders
│   └── BezierCurveAA.shader
├── Sprites
│   ├── Clouds
│   │   ├── Clouds 1
│   │   │   ├── 1.png
│   │   │   ├── 2.png
│   │   │   ├── 3.png
│   │   │   └── 4.png
│   │   ├── Clouds 2
│   │   │   ├── 1.png
│   │   │   ├── 2.png
│   │   │   ├── 3.png
│   │   │   └── 4.png
│   │   ├── Clouds 3
│   │   │   ├── 1.png
│   │   │   ├── 2.png
│   │   │   ├── 3.png
│   │   │   └── 4.png
│   │   ├── Clouds 4
│   │   │   ├── 1.png
│   │   │   ├── 2.png
│   │   │   ├── 3.png
│   │   │   └── 4.png
│   │   ├── Clouds 5
│   │   │   ├── 1.png
│   │   │   ├── 2.png
│   │   │   ├── 3.png
│   │   │   ├── 4.png
│   │   │   └── 5.png
│   │   ├── Clouds 6
│   │   │   ├── 1.png
│   │   │   ├── 2.png
│   │   │   ├── 3.png
│   │   │   ├── 4.png
│   │   │   ├── 5.png
│   │   │   └── 6.png
│   │   ├── Clouds 7
│   │   │   ├── 1.png
│   │   │   ├── 2.png
│   │   │   ├── 3.png
│   │   │   └── 4.png
│   │   └── Clouds 8
│   │       ├── 1.png
│   │       ├── 2.png
│   │       ├── 3.png
│   │       ├── 4.png
│   │       ├── 5.png
│   │       └── 6.png
│   ├── Free Pixel Effects Pack
│   │   ├── 10_weaponhit_spritesheet.png
│   │   ├── 11_fire_spritesheet.png
│   │   ├── 12_nebula_spritesheet.png
│   │   ├── 13_vortex_spritesheet.png
│   │   ├── 14_phantom_spritesheet.png
│   │   ├── 15_loading_spritesheet.png
│   │   ├── 16_sunburn_spritesheet.png
│   │   ├── 17_felspell_spritesheet.png
│   │   ├── 18_midnight_spritesheet.png
│   │   ├── 19_freezing_spritesheet.png
│   │   ├── 1_magicspell_spritesheet.png
│   │   ├── 20_magicbubbles_spritesheet.png
│   │   ├── 2_magic8_spritesheet.png
│   │   ├── 3_bluefire_spritesheet.png
│   │   ├── 4_casting_spritesheet.png
│   │   ├── 5_magickahit_spritesheet.png
│   │   ├── 6_flamelash_spritesheet.png
│   │   ├── 7_firespin_spritesheet.png
│   │   ├── 8_protectioncircle_spritesheet.png
│   │   ├── 9_brightfire_spritesheet.png
│   │   ├── README.txt
│   │   └── cover.png
│   ├── MR-Platformer-v1
│   │   ├── Backgrounds
│   │   │   ├── merged-full-background.png
│   │   │   ├── parallax-background-mountains.png
│   │   │   ├── parallax-background-sky.png
│   │   │   ├── parallax-forest-trees-01.png
│   │   │   └── parallax-forest-trees-02.png
│   │   ├── Enemies
│   │   │   ├── Enemy-Bat-Fly-32x32.png
│   │   │   ├── Enemy-Boss-Golem-Idle-48x48.png
│   │   │   ├── Enemy-Dark-Guard-Idle-39x49.png
│   │   │   ├── Enemy-Forest-Goblin-Hog-Idle-32x32.png
│   │   │   ├── Enemy-Forest-Goblin-Idle-32x32.png
│   │   │   ├── Enemy-Frog-Attack-24x24.png
│   │   │   ├── Enemy-Frog-Idle-24x24.png
│   │   │   ├── Enemy-Frog-Tongue-Attack-72x24.png
│   │   │   ├── Enemy-Mushroom-Walk-24x24.png
│   │   │   ├── Enemy-Necromancer-Idle-32x32.png
│   │   │   ├── Enemy-Plant-Mutant-Idle-Attack-46x32.png
│   │   │   ├── Enemy-Skull-Slime-Idle-32x24.png
│   │   │   ├── Enemy-Snail-Attack-24x24.png
│   │   │   └── Enemy-Snail-Walk-24x24.png
│   │   ├── Misc
│   │   │   ├── Bridge-Support.png
│   │   │   ├── Bridge-handle-01.png
│   │   │   ├── Bridge-handle-02.png
│   │   │   ├── Bridge.png
│   │   │   ├── Bush-Background.png
│   │   │   ├── Bush-Green-Foreground.png
│   │   │   ├── Bush-Purple-Foreground.png
│   │   │   ├── Cave-Background-Hole-01.png
│   │   │   ├── Cave-Background-Rocks-01.png
│   │   │   ├── Cave-Background-Rocks-02.png
│   │   │   ├── Cave-Background.png
│   │   │   ├── Cave-Entrance.png
│   │   │   ├── Grass-Green-Foreground.png
│   │   │   ├── Grass-Purple-Foreground.png
│   │   │   ├── House-01.png
│   │   │   ├── House-02.png
│   │   │   ├── House-Background-01.png
│   │   │   ├── House-Background-02
│   │   │   ├── Lamp-Off.png
│   │   │   ├── Lamp-On.png
│   │   │   └── Mushrooms.png
│   │   ├── NPC
│   │   │   ├── NPC-Alchemist-Idle-24x24.png
│   │   │   ├── NPC-Blacksmith-Idle-48x48.png
│   │   │   ├── NPC-Builder-01-Working-24x24.png
│   │   │   ├── NPC-Builder-02-Working-24x24.png
│   │   │   ├── NPC-Chick-Idle-16x16.png
│   │   │   ├── NPC-Miner-Idle-24x24.png
│   │   │   ├── NPC-Old-Shaman-Idle-24x24.png
│   │   │   ├── NPC-Puppy-Idle-24x24.png
│   │   │   ├── NPC-Village-Guard-Idle-32x32.png
│   │   │   ├── NPC-Village-Lady-01-Talk-24x24.png
│   │   │   └── NPC-Village-Lady-02-Idle-24x24.png
│   │   ├── Objects
│   │   │   ├── Obj-Arrow-Idle-12x12.png
│   │   │   ├── Obj-Arrow-Stuck-12x12.png
│   │   │   ├── Obj-Axe-Wood.png
│   │   │   ├── Obj-Barrel.png
│   │   │   ├── Obj-Big-Wood-Platform-01.png
│   │   │   ├── Obj-Big-Wood-Platform-02.png
│   │   │   ├── Obj-Blue-Mineral.png
│   │   │   ├── Obj-Boxes.png
│   │   │   ├── Obj-Cage.png
│   │   │   ├── Obj-Checkpoint-Off.png
│   │   │   ├── Obj-Checkpoint-On.png
│   │   │   ├── Obj-Chest-Closed-24x24.png
│   │   │   ├── Obj-Chest-Opening-24x24.png
│   │   │   ├── Obj-Crystal-Idle-32x32.png
│   │   │   ├── Obj-Crystal-Open-32x32.png
│   │   │   ├── Obj-Dreamcatcher-01.png
│   │   │   ├── Obj-Dreamcatcher-02.png
│   │   │   ├── Obj-Dreamcatcher-03.png
│   │   │   ├── Obj-Fence.png
│   │   │   ├── Obj-Flag-Hanging-01.png
│   │   │   ├── Obj-Gate-Hold.png
│   │   │   ├── Obj-Gate-Pillar.png
│   │   │   ├── Obj-Green-Mineral.png
│   │   │   ├── Obj-Hanging-Flag-01.png
│   │   │   ├── Obj-Hanging-Flag-02.png
│   │   │   ├── Obj-Hanging-Flag-Medium.png
│   │   │   ├── Obj-Idol.png
│   │   │   ├── Obj-Key.png
│   │   │   ├── Obj-Lamp-On.png
│   │   │   ├── Obj-Light-01.png
│   │   │   ├── Obj-Mine-Carriage.png
│   │   │   ├── Obj-Moving-Platform-Idle-48x28.png
│   │   │   ├── Obj-Orange-Mineral.png
│   │   │   ├── Obj-Pickaxe.png
│   │   │   ├── Obj-Roof-Hanging.png
│   │   │   ├── Obj-Short-Roof.png
│   │   │   ├── Obj-Stairs.png
│   │   │   ├── Obj-Statue.png
│   │   │   ├── Obj-Village-Gate-Top.png
│   │   │   ├── Obj-Wood-Pillar-01.png
│   │   │   ├── Obj-Wood-Platform-01.png
│   │   │   ├── Obj-Wood-Platform-02.png
│   │   │   ├── Obj-Wood-Platform-Tall-02.png
│   │   │   ├── Obj-Wood-Platform-Tall.png
│   │   │   ├── Obj-Wood-Platform-Top.png
│   │   │   └── Obj-Wood.png
│   │   ├── Player
│   │   │   ├── Player-Attack-24x24.png
│   │   │   ├── Player-Fall-24x24.png
│   │   │   ├── Player-Idle-24x24.png
│   │   │   ├── Player-Jump-24x24.png
│   │   │   └── Player-Run-24x24.png
│   │   ├── Tiles
│   │   │   ├── Cave-Under-Tile.png
│   │   │   ├── Tile-01.png
│   │   │   ├── Tile-02.png
│   │   │   ├── Tile-03.png
│   │   │   ├── Tile-04.png
│   │   │   ├── Tile-05.png
│   │   │   ├── Tile-06.png
│   │   │   ├── Tile-07.png
│   │   │   ├── Tile-08.png
│   │   │   ├── Tile-09.png
│   │   │   ├── Tile-10.png
│   │   │   ├── Tile-11.png
│   │   │   ├── Tile-12.png
│   │   │   ├── Tile-13.png
│   │   │   ├── Tile-14.png
│   │   │   ├── Tile-15.png
│   │   │   ├── Tile-16.png
│   │   │   ├── Tile-17.png
│   │   │   ├── Tile-18.png
│   │   │   ├── Tile-19.png
│   │   │   ├── Tile-20.png
│   │   │   ├── Tile-21.png
│   │   │   ├── Tile-22.png
│   │   │   ├── Tile-23.png
│   │   │   ├── Tile-24.png
│   │   │   ├── Tile-25.png
│   │   │   ├── Tile-26.png
│   │   │   ├── Tile-27.png
│   │   │   ├── Tile-28.png
│   │   │   ├── Tile-29.png
│   │   │   ├── Tile-30.png
│   │   │   ├── Tile-31.png
│   │   │   ├── Tile-32.png
│   │   │   ├── Tile-33.png
│   │   │   ├── Tile-34.png
│   │   │   ├── Tile-35.png
│   │   │   ├── Tile-36.png
│   │   │   ├── Tile-37.png
│   │   │   ├── Tree-Trunk-01.png
│   │   │   └── Tree-Trunk-02.png
│   │   └── UI
│   │       ├── Quest-Mark-Idle-16x16.png
│   │       ├── UI-Boss-Icon.png
│   │       ├── UI-Lives.png
│   │       ├── UI-Menu-Button-Active.png
│   │       ├── UI-Menu-Button-Default.png
│   │       └── UI-Menu-Popup-Background.png
│   ├── PixelWhite.png
│   ├── Shikashi's Fantasy Icons Pack v2
│   │   ├── #1 - Transparent Icons.png
│   │   ├── #2 - Transparent Icons & Drop Shadow.png
│   │   ├── BG 10.png
│   │   ├── BG 11.png
│   │   ├── BG 3a.png
│   │   ├── BG 3b.png
│   │   ├── BG 3c.png
│   │   ├── BG 4a.png
│   │   ├── BG 4b.png
│   │   ├── BG 5.png
│   │   ├── BG 6.png
│   │   ├── BG 7.png
│   │   ├── BG 8.png
│   │   ├── BG 9.png
│   │   ├── Background 1a.png
│   │   ├── Background 1b.png
│   │   ├── Background 2.png
│   │   └── Shikashi's Fantasy Icons Pack.txt
│   ├── Tiny RPG Character Asset Pack v1.03 -Free Soldier&Orc
│   │   ├── Arrow(Projectile)
│   │   │   ├── Arrow01(100x100).png
│   │   │   └── Arrow01(32x32).png
│   │   ├── Aseprite file
│   │   │   ├── Orc.aseprite
│   │   │   └── Soldier.aseprite
│   │   └── Characters(100x100)
│   │       ├── Orc
│   │       │   ├── Orc
│   │       │   │   ├── Orc-Attack01.png
│   │       │   │   ├── Orc-Attack02.png
│   │       │   │   ├── Orc-Death.png
│   │       │   │   ├── Orc-Hurt.png
│   │       │   │   ├── Orc-Idle-Anim.anim
│   │       │   │   ├── Orc-Idle.png
│   │       │   │   ├── Orc-Idle_0.controller
│   │       │   │   ├── Orc-Walk.png
│   │       │   │   ├── Orc.png
│   │       │   │   └── Shadow sprites
│   │       │   │       ├── Orc-shadow.png
│   │       │   │       ├── Orc-shadow_attack02.png
│   │       │   │       └── Orc-shadow_death.png
│   │       │   ├── Orc with shadows
│   │       │   │   ├── Orc-Attack01.png
│   │       │   │   ├── Orc-Attack02.png
│   │       │   │   ├── Orc-Death.png
│   │       │   │   ├── Orc-Hurt.png
│   │       │   │   ├── Orc-Idle.png
│   │       │   │   ├── Orc-Walk.png
│   │       │   │   └── Orc.png
│   │       │   └── Orc(Split Effects)
│   │       │       ├── Orc-attack01_Effect.png
│   │       │       ├── Orc-attack02_Effect.png
│   │       │       └── Orc.png
│   │       └── Soldier
│   │           ├── Arrow(projectile)
│   │           │   ├── Arrow01(100x100).png
│   │           │   └── Arrow01(32x32).png
│   │           ├── Soldier
│   │           │   ├── Shadow sprites
│   │           │   │   ├── Soldier-Shadow.png
│   │           │   │   └── Soldier-Shadow_death.png
│   │           │   ├── Soldier-Attack01.png
│   │           │   ├── Soldier-Attack02.png
│   │           │   ├── Soldier-Attack03.png
│   │           │   ├── Soldier-Death.png
│   │           │   ├── Soldier-Hurt.png
│   │           │   ├── Soldier-Idle.png
│   │           │   ├── Soldier-Shadow_attack2.png
│   │           │   ├── Soldier-Walk.png
│   │           │   └── Soldier.png
│   │           ├── Soldier with shadows
│   │           │   ├── Soldier-Attack01.png
│   │           │   ├── Soldier-Attack02.png
│   │           │   ├── Soldier-Attack03.png
│   │           │   ├── Soldier-Death.png
│   │           │   ├── Soldier-Hurt.png
│   │           │   ├── Soldier-Idle-Anim.anim
│   │           │   ├── Soldier-Idle.png
│   │           │   ├── Soldier-Idle_0.controller
│   │           │   ├── Soldier-Walk.png
│   │           │   ├── Soldier.png
│   │           │   └── WizardPrefab.controller
│   │           └── Soldier(Split Effects)
│   │               ├── Soldier-Attack01_Effect.png
│   │               ├── Soldier-Attack02_Effect.png
│   │               ├── Soldier-Attack03_Effect.png
│   │               └── Soldier.png
│   └── Wizard Pack
│       ├── Attack1.png
│       ├── Attack2.png
│       ├── Death.png
│       ├── Fall.png
│       ├── Hit.png
│       ├── Idle.png
│       ├── Jump.png
│       └── Run.png
├── Test
├── TextMesh Pro
│   ├── Examples & Extras
│   │   ├── Fonts
│   │   │   ├── Anton OFL.txt
│   │   │   ├── Anton.ttf
│   │   │   ├── Bangers - OFL.txt
│   │   │   ├── Bangers.ttf
│   │   │   ├── Electronic Highway Sign.TTF
│   │   │   ├── Oswald-Bold - OFL.txt
│   │   │   ├── Oswald-Bold.ttf
│   │   │   ├── Roboto-Bold - AFL.txt
│   │   │   ├── Roboto-Bold - License.txt
│   │   │   ├── Roboto-Bold.ttf
│   │   │   ├── Unity - OFL.txt
│   │   │   └── Unity.ttf
│   │   ├── Materials
│   │   │   ├── Crate - Surface Shader Scene.mat
│   │   │   ├── Crate - URP.mat
│   │   │   ├── Ground - Logo Scene.mat
│   │   │   ├── Ground - Surface Shader Scene.mat
│   │   │   ├── Ground - URP.mat
│   │   │   └── Small Crate_diffuse.mat
│   │   ├── Prefabs
│   │   │   ├── Text Popup.prefab
│   │   │   ├── TextMeshPro - Prefab 1.prefab
│   │   │   └── TextMeshPro - Prefab 2.prefab
│   │   ├── Resources
│   │   │   ├── Color Gradient Presets
│   │   │   │   ├── Blue to Purple - Vertical.asset
│   │   │   │   ├── Dark to Light Green - Vertical.asset
│   │   │   │   ├── Light to Dark Green - Vertical.asset
│   │   │   │   └── Yellow to Orange - Vertical.asset
│   │   │   ├── Fonts & Materials
│   │   │   │   ├── Anton SDF - Drop Shadow.mat
│   │   │   │   ├── Anton SDF - Outline.mat
│   │   │   │   ├── Anton SDF - Sunny Days.mat
│   │   │   │   ├── Anton SDF.asset
│   │   │   │   ├── Bangers SDF - Drop Shadow - 2 Pass.mat
│   │   │   │   ├── Bangers SDF - Drop Shadow.mat
│   │   │   │   ├── Bangers SDF - Outline.mat
│   │   │   │   ├── Bangers SDF Glow.mat
│   │   │   │   ├── Bangers SDF Logo - URP.mat
│   │   │   │   ├── Bangers SDF Logo.mat
│   │   │   │   ├── Bangers SDF.asset
│   │   │   │   ├── Electronic Highway Sign SDF.asset
│   │   │   │   ├── LiberationSans SDF - Metalic Green.mat
│   │   │   │   ├── LiberationSans SDF - Overlay.mat
│   │   │   │   ├── LiberationSans SDF - Soft Mask.mat
│   │   │   │   ├── Oswald Bold SDF.asset
│   │   │   │   ├── Roboto-Bold SDF - Drop Shadow.mat
│   │   │   │   ├── Roboto-Bold SDF - HDRP Unlit.mat
│   │   │   │   ├── Roboto-Bold SDF - Surface.mat
│   │   │   │   ├── Roboto-Bold SDF - URP.mat
│   │   │   │   ├── Roboto-Bold SDF.asset
│   │   │   │   ├── Unity SDF - HDRP LIT - Bloom.mat
│   │   │   │   ├── Unity SDF - HDRP LIT - Outline.mat
│   │   │   │   └── Unity SDF.asset
│   │   │   └── Sprite Assets
│   │   │       ├── Default Sprite Asset.asset
│   │   │       └── DropCap Numbers.asset
│   │   ├── Scenes
│   │   │   ├── 01-  Single Line TextMesh Pro.unity
│   │   │   ├── 02 - Multi-line TextMesh Pro.unity
│   │   │   ├── 03 - Line Justification.unity
│   │   │   ├── 04 - Word Wrapping.unity
│   │   │   ├── 05 - Style Tags.unity
│   │   │   ├── 06 - Extra Rich Text Examples.unity
│   │   │   ├── 07 - Superscript & Subscript Example.unity
│   │   │   ├── 08 - Improved Text Alignment.unity
│   │   │   ├── 09 - Margin Tag Example.unity
│   │   │   ├── 10 - Bullets & Numbered List Example.unity
│   │   │   ├── 11 - The Style Tag.unity
│   │   │   ├── 12 - Link Example.unity
│   │   │   ├── 12a - Text Interactions.unity
│   │   │   ├── 13 - Soft Hyphenation.unity
│   │   │   ├── 14 - Multi Font & Sprites.unity
│   │   │   ├── 15 - Inline Graphics & Sprites.unity
│   │   │   ├── 16 - Linked text overflow mode example.unity
│   │   │   ├── 17 - Old Computer Terminal.unity
│   │   │   ├── 18 - ScrollRect & Masking & Layout.unity
│   │   │   ├── 19 - Masking Texture & Soft Mask.unity
│   │   │   ├── 20 - Input Field with Scrollbar.unity
│   │   │   ├── 21 - Script Example.unity
│   │   │   ├── 22 - Basic Scripting Example.unity
│   │   │   ├── 23 - Animating Vertex Attributes.unity
│   │   │   ├── 24 - Surface Shader Example URP.unity
│   │   │   ├── 24 - Surface Shader Example.unity
│   │   │   ├── 25 - Sunny Days Example.unity
│   │   │   ├── 26 - Dropdown Placeholder Example.unity
│   │   │   ├── 27 - Double Pass Shader Example.unity
│   │   │   ├── 28 - HDRP Shader Example
│   │   │   │   └── Sky and Fog Volume Profile.asset
│   │   │   ├── 28 - HDRP Shader Example.unity
│   │   │   └── Benchmark (Floating Text).unity
│   │   ├── Scripts
│   │   │   ├── Benchmark01.cs
│   │   │   ├── Benchmark01_UGUI.cs
│   │   │   ├── Benchmark02.cs
│   │   │   ├── Benchmark03.cs
│   │   │   ├── Benchmark04.cs
│   │   │   ├── CameraController.cs
│   │   │   ├── ChatController.cs
│   │   │   ├── DropdownSample.cs
│   │   │   ├── EnvMapAnimator.cs
│   │   │   ├── ObjectSpin.cs
│   │   │   ├── ShaderPropAnimator.cs
│   │   │   ├── SimpleScript.cs
│   │   │   ├── SkewTextExample.cs
│   │   │   ├── TMP_DigitValidator.cs
│   │   │   ├── TMP_ExampleScript_01.cs
│   │   │   ├── TMP_FrameRateCounter.cs
│   │   │   ├── TMP_PhoneNumberValidator.cs
│   │   │   ├── TMP_TextEventCheck.cs
│   │   │   ├── TMP_TextEventHandler.cs
│   │   │   ├── TMP_TextInfoDebugTool.cs
│   │   │   ├── TMP_TextSelector_A.cs
│   │   │   ├── TMP_TextSelector_B.cs
│   │   │   ├── TMP_UiFrameRateCounter.cs
│   │   │   ├── TMPro_InstructionOverlay.cs
│   │   │   ├── TeleType.cs
│   │   │   ├── TextConsoleSimulator.cs
│   │   │   ├── TextMeshProFloatingText.cs
│   │   │   ├── TextMeshSpawner.cs
│   │   │   ├── VertexColorCycler.cs
│   │   │   ├── VertexJitter.cs
│   │   │   ├── VertexShakeA.cs
│   │   │   ├── VertexShakeB.cs
│   │   │   ├── VertexZoom.cs
│   │   │   └── WarpTextExample.cs
│   │   ├── Sprites
│   │   │   ├── Default Sprites.png
│   │   │   └── DropCap Numbers.psd
│   │   └── Textures
│   │       ├── Brushed Metal 3.jpg
│   │       ├── Floor Cement.jpg
│   │       ├── Floor Tiles 1 - diffuse.jpg
│   │       ├── Fruit Jelly (B&W).jpg
│   │       ├── Gradient Diagonal (Color).jpg
│   │       ├── Gradient Horizontal (Color).jpg
│   │       ├── Gradient Vertical (Color).jpg
│   │       ├── Mask Zig-n-Zag.psd
│   │       ├── Small Crate_diffuse.jpg
│   │       ├── Small Crate_normal.jpg
│   │       ├── Sunny Days - Seamless.jpg
│   │       ├── Text Overflow - Linked Text Image 1.png
│   │       ├── Text Overflow - Linked Text UI Screenshot.png
│   │       ├── Wipe Pattern - Circle.psd
│   │       ├── Wipe Pattern - Diagonal.psd
│   │       ├── Wipe Pattern - Radial Double.psd
│   │       └── Wipe Pattern - Radial Quad.psd
│   ├── Fonts
│   │   ├── LiberationSans - OFL.txt
│   │   └── LiberationSans.ttf
│   ├── Resources
│   │   ├── Fonts & Materials
│   │   │   ├── LiberationSans SDF - Drop Shadow.mat
│   │   │   ├── LiberationSans SDF - Fallback.asset
│   │   │   ├── LiberationSans SDF - Outline.mat
│   │   │   └── LiberationSans SDF.asset
│   │   ├── LineBreaking Following Characters.txt
│   │   ├── LineBreaking Leading Characters.txt
│   │   ├── Sprite Assets
│   │   │   └── EmojiOne.asset
│   │   ├── Style Sheets
│   │   │   └── Default Style Sheet.asset
│   │   └── TMP Settings.asset
│   ├── Shaders
│   │   ├── SDFFunctions.hlsl
│   │   ├── TMP_Bitmap-Custom-Atlas.shader
│   │   ├── TMP_Bitmap-Mobile.shader
│   │   ├── TMP_Bitmap.shader
│   │   ├── TMP_SDF Overlay.shader
│   │   ├── TMP_SDF SSD.shader
│   │   ├── TMP_SDF-HDRP LIT.shadergraph
│   │   ├── TMP_SDF-HDRP UNLIT.shadergraph
│   │   ├── TMP_SDF-Mobile Masking.shader
│   │   ├── TMP_SDF-Mobile Overlay.shader
│   │   ├── TMP_SDF-Mobile SSD.shader
│   │   ├── TMP_SDF-Mobile-2-Pass.shader
│   │   ├── TMP_SDF-Mobile.shader
│   │   ├── TMP_SDF-Surface-Mobile.shader
│   │   ├── TMP_SDF-Surface.shader
│   │   ├── TMP_SDF-URP Lit.shadergraph
│   │   ├── TMP_SDF-URP Unlit.shadergraph
│   │   ├── TMP_SDF.shader
│   │   ├── TMP_Sprite.shader
│   │   ├── TMPro.cginc
│   │   ├── TMPro_Mobile.cginc
│   │   ├── TMPro_Properties.cginc
│   │   └── TMPro_Surface.cginc
│   └── Sprites
│       ├── EmojiOne Attribution.txt
│       ├── EmojiOne.json
│       └── EmojiOne.png
└── UniversalRenderPipelineGlobalSettings.asset
--------------------------------------------------------------------------------

SCRIPT CONTENTS
================================================================================

SCRIPT CONTENTS
================================================================================

////////////////////////////////////////////////////////////////////////////////
// FILE: Assets\Scripts\Nodes\Runtime\NodeGraph.cs
////////////////////////////////////////////////////////////////////////////////
﻿using System;
using System.Collections.Generic;
using UnityEngine;

[Serializable]
public class NodeGraph
{
    public List<NodeData> nodes;
    [NonSerialized] public Dictionary<string, List<string>> adjacency;
    [NonSerialized] public Dictionary<string, string> manaConnections;

    public NodeGraph()
    {
        nodes = new List<NodeData>();
        adjacency = new Dictionary<string, List<string>>();
        manaConnections = new Dictionary<string, string>();
    }
}




////////////////////////////////////////////////////////////////////////////////
// FILE: Assets\Scripts\Nodes\UI\ColorExtensions.cs
////////////////////////////////////////////////////////////////////////////////
﻿using UnityEngine;

public static class ColorExtensions
{
    public static Color WithAlpha(this Color c, float alpha)
    {
        return new Color(c.r, c.g, c.b, alpha);
    }
}




////////////////////////////////////////////////////////////////////////////////
// FILE: Assets\Scripts\Nodes\UI\NodeConnectionView.cs
////////////////////////////////////////////////////////////////////////////////
﻿using UnityEngine;
using UnityEngine.EventSystems;

[RequireComponent(typeof(RectTransform))]
public class NodeConnectionView : MonoBehaviour, IPointerClickHandler
{
    [SerializeField] private RectTransform startRect;
    [SerializeField] private RectTransform endRect;

    public PinView sourcePin;
    public PinView targetPin;

    private UICubicBezier bezier;
    private RectTransform ownRect;

    private bool isPreviewing = false;
    private bool isFinalized = false;

    private void Awake()
    {
        ownRect = GetComponent<RectTransform>();
        bezier  = GetComponent<UICubicBezier>();
    }

    private void Update()
    {
        // If finalized and either pin is missing, destroy self.
        if (isFinalized && (sourcePin == null || targetPin == null))
        {
            Destroy(gameObject);
            return;
        }

        if (bezier == null || startRect == null)
            return;

        Vector2 localStart;
        RectTransformUtility.ScreenPointToLocalPointInRectangle(ownRect, startRect.position, null, out localStart);

        Vector2 localEnd;
        if (!isPreviewing && endRect != null)
        {
            RectTransformUtility.ScreenPointToLocalPointInRectangle(ownRect, endRect.position, null, out localEnd);
        }
        else
        {
            RectTransformUtility.ScreenPointToLocalPointInRectangle(ownRect, Input.mousePosition, null, out localEnd);
        }

        bezier.UpdateCurve(localStart, localEnd);
    }

    public void StartPreview(RectTransform source)
    {
        startRect = source;
        endRect = null;
        isPreviewing = true;
    }

    public void FinalizeConnection(RectTransform end)
    {
        endRect = end;
        isPreviewing = false;
        isFinalized = true;
    }

    public void OnPointerClick(PointerEventData eventData)
    {
        if (eventData.button == PointerEventData.InputButton.Right)
        {
            Debug.Log("[NodeConnectionView] Deleting connection");
            // Clear references to help garbage collection.
            sourcePin = null;
            targetPin = null;
            Destroy(gameObject);
        }
    }
}





////////////////////////////////////////////////////////////////////////////////
// FILE: Assets\Scripts\Nodes\UI\NodeDraggable.cs
////////////////////////////////////////////////////////////////////////////////
﻿using UnityEngine;
using UnityEngine.EventSystems;

/// <summary>
/// Drags a node in its parent's local space, correctly handling parent scaling & panning.
/// Attach this to each node (NodeView prefab).
/// </summary>
[RequireComponent(typeof(RectTransform))]
public class NodeDraggable : MonoBehaviour, IPointerDownHandler, IDragHandler
{
    private RectTransform nodeRect;      // The node's own RectTransform
    private RectTransform parentRect;    // The parent panel's RectTransform
    private Vector2 pointerOffset;       // Offset between pointer & node's anchoredPosition

    private void Awake()
    {
        nodeRect = GetComponent<RectTransform>();
        parentRect = nodeRect.parent as RectTransform;
        if (parentRect == null)
        {
            Debug.LogError("[NodeDraggable] No parent RectTransform found! Dragging won't work.");
        }
    }

    public void OnPointerDown(PointerEventData eventData)
    {
        // Convert the pointer's screen position to the parent's local coordinates.
        Vector2 localPointerPos;
        if (RectTransformUtility.ScreenPointToLocalPointInRectangle(
                parentRect, eventData.position, eventData.pressEventCamera, out localPointerPos))
        {
            // The offset is (nodePosition - pointerPosition) in parent's local space.
            pointerOffset = nodeRect.anchoredPosition - localPointerPos;
        }
    }

    public void OnDrag(PointerEventData eventData)
    {
        Vector2 localPointerPos;
        if (RectTransformUtility.ScreenPointToLocalPointInRectangle(
                parentRect, eventData.position, eventData.pressEventCamera, out localPointerPos))
        {
            // On drag, update the node's anchoredPosition so it follows the pointer + offset.
            nodeRect.anchoredPosition = localPointerPos + pointerOffset;
        }
    }
}





--------------------------------------------------------------------------------
This is part 4 out of 8 of script collection. 4 more parts remain.
--------------------------------------------------------------------------------